<?xml version="1.0" encoding="UTF-8"?>
<record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <client_script><![CDATA[function($rootScope,$scope,spUtil) {
	/* widget controller */
	// Use a position indicator to know which record to update
	$scope.notePos = 0;

	$scope.selectItem = function(idx) {  
		// Set the position indicator to the index value passed in on select
		$scope.notePos = idx;
		var id = $scope.data.notes[idx].sys_id;
		console.log('Note ID: ' + id);
		$rootScope.noteID = id;
		$rootScope.$emit('selectNote', id);
	}
	// Subscribe to event.  Set the new title and note values on the 
	// c.data object
	$rootScope.$on('updateTitle', function(event,data) { 
		$scope.data.notes[$scope.notePos].title = data.title;
		$scope.data.notes[$scope.notePos].note = data.note;
	});

	$scope.newNote = function() {
		$scope.server.get({
			action: 'newNote'
		}).then(function(r) {
			$scope.data.notes.unshift(r.data.newNote);
			$scope.data.noteID = r.data.noteID;
			$rootScope.noteID = $scope.data.noteID;
			$rootScope.$emit('selectNote', $scope.data.noteID);
		});
	}

	$rootScope.$on('deleteNote', function(event,data) {
		$scope.data.notes.splice($scope.notePos, 1);
	});

	$scope.snNoteUpdate = function(name, sysID){
		for (var i=0; i < $scope.data.notes.length; i++){
			if($scope.data.notes[i].sys_id == name.data.sys_id){
				if(name.data.record.note){
					$scope.data.notes[i].note = name.data.record.note.display_value;
				}
				if(name.data.record.title){
					$scope.data.notes[i].title = name.data.record.title.display_value;
				}
				$scope.server.update();
			}
		}
	}

	$scope.snNoteDelete = function(sysID){
		$scope.server.get({
			action: 'snDeleteNote',
			noteID: sysID
		}).then(function(r){
			$scope.data.notes = r.data.notes;
		});
	}

	spUtil.recordWatch($scope, "x_snc_createnotes_note", "numberANYTHING", function(name, data){
		console.log(name.data.operation);
		console.log(name);
		if(name.data.operation == "insert"){
			$scope.server.refresh();
		}
		if(name.data.operation == "update"){
			$scope.snNoteUpdate(name, name.data.sys_id);
		}
		if(name.data.operation == "delete"){
			$scope.snNoteDelete(name.data.sys_id);
		}
	})

}
]]></client_script>
        <controller_as>c</controller_as>
        <css>h3.panel-title {
  font-size:20px;
  padding-top:5px;
}</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>true</has_preview>
        <id>notes_list</id>
        <internal>false</internal>
        <link/>
        <name>Notes List</name>
        <option_schema>[{"hint":"Specify a title for the Notes List widgets","name":"title","default_value":"Notes","label":"Title","type":"string"},{"hint":"Select the maximum number of records to display","name":"maximum_records_to_display","default_value":"5","label":"Maximum records to display","type":"choice","choices":[{"label":"2","value":"2"},{"label":"3","value":"3"},{"label":"5","value":"5"},{"label":"7","value":"7"},{"label":"11","value":"11"},{"label":"13","value":"13"},{"label":"17","value":"17"}]}]</option_schema>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function() {

	data.notes = [];
	var noteGR = new GlideRecord('x_snc_createnotes_note');
	noteGR.addQuery('user', gs.getUser().getID());
	noteGR.orderByDesc('sys_created_on');
	noteGR.setLimit(options.maximum_records_to_display);
	noteGR.query();
	while (noteGR.next()) {
		var noteObj = {};

		$sp.getRecordDisplayValues(noteObj, noteGR, 'number,title,sys_id');

		noteObj.note = noteGR.getValue('note').slice(0,20);

		data.notes.push(noteObj);
	}

	if (input) {
		if (input.action == 'newNote') {
			var newNote = new GlideRecord('x_snc_createnotes_note');
			newNote.newRecord();
			var id = newNote.insert();
			data.noteID = id;
			data.newNote = {};
			$sp.getRecordValues(data.newNote,newNote,"title,note,sys_id");

		}
		
		if(input.action == "snDeleteNote"){
			var delNote = new GlideRecord('x_snc_createnotes_note');
			if(delNote.get(input.noteID)){
				delNote.deleteRecord();
			}
		}
		
	}
}
)();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2017-10-14 01:08:53</sys_created_on>
        <sys_id>296321a54f7d4f004e584b8d0210c7a9</sys_id>
        <sys_mod_count>39</sys_mod_count>
        <sys_name>Notes List</sys_name>
        <sys_package display_value="CreateNotes" source="x_snc_createnotes">df5fd9a5090232007f44e1046c8ff69f</sys_package>
        <sys_policy/>
        <sys_scope display_value="CreateNotes">df5fd9a5090232007f44e1046c8ff69f</sys_scope>
        <sys_update_name>sp_widget_296321a54f7d4f004e584b8d0210c7a9</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2018-01-05 11:09:44</sys_updated_on>
        <template><![CDATA[<div class="panel panel-default">
  <div class="panel-heading clearfix">
    <h3 class="panel-title pull-left">
      {{::options.title}}
    </h3>
    <button class="btn btn-default pull-right" ng-click="newNote()"> 
      <span class="glyphicon glyphicon-plus"></span> 
    </button>
  </div>
  <div class="panel-body"> 
    <input placeholder="Filter" class="form-control" ng-model="noteFilter" /> 
  </div>

  <div class="list-group">
    <a class="list-group-item" ng-click="selectItem($index)" ng-repeat="note in data.notes | filter: noteFilter">
      <h4 class="list-group-item-heading">
        {{note.title}}
      </h4>
      <p class="list-group-item-text">
        {{note.note}}
      </p>
    </a>
  </div>
</div>]]></template>
    </sp_widget>
</record_update>
